<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[cout << Blog << endl;]]></title>
  <link href="http://blog.iTian.mobi/atom.xml" rel="self"/>
  <link href="http://blog.iTian.mobi/"/>
  <updated>2014-09-25T21:12:51+08:00</updated>
  <id>http://blog.iTian.mobi/</id>
  <author>
    <name><![CDATA[TZ]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[城]]></title>
    <link href="http://blog.iTian.mobi/blog/2014/09/25/cheng/"/>
    <updated>2014-09-25T21:11:59+08:00</updated>
    <id>http://blog.iTian.mobi/blog/2014/09/25/cheng</id>
    <content type="html"><![CDATA[<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class=""><span class="line">一个人就像一座城
</span><span class="line">城外有墙
</span><span class="line">墙上有东南西北门
</span><span class="line">门外有八丈护城河
</span><span class="line">有的人
</span><span class="line">无意中走上一条道
</span><span class="line">不觉中通过层层关卡
</span><span class="line">找到一扇大开的入城之门
</span><span class="line">
</span><span class="line">相同一座城，却好像
</span><span class="line">关闭的城门后
</span><span class="line">有宝藏</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mutex in Minute]]></title>
    <link href="http://blog.iTian.mobi/blog/2014/09/25/mutex-in-minute/"/>
    <updated>2014-09-25T20:57:16+08:00</updated>
    <id>http://blog.iTian.mobi/blog/2014/09/25/mutex-in-minute</id>
    <content type="html"><![CDATA[<p>stl containers are not safe in threads.</p>

<p>Now,with new lambda in C++11.We can make safe containers in minimal codes.</p>

<p>Below is a safe Vector.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
</pre></td><td class="code"><pre><code class="cpp"><span class="line"><span class="cp">#include &lt;thread&gt;</span>
</span><span class="line"><span class="cp">#include &lt;vector&gt;</span>
</span><span class="line"><span class="k">template</span> <span class="o">&lt;</span><span class="k">typename</span> <span class="n">Type</span><span class="o">&gt;</span>
</span><span class="line"><span class="k">class</span> <span class="nc">SafeVec</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">Type</span><span class="o">&gt;</span> <span class="n">vec</span><span class="p">;</span>
</span><span class="line">    <span class="n">std</span><span class="o">::</span><span class="n">mutex</span> <span class="n">mut</span><span class="p">;</span>
</span><span class="line"><span class="k">public</span><span class="o">:</span>
</span><span class="line">    <span class="n">SafeVec</span><span class="p">(){};</span>
</span><span class="line">    <span class="kt">void</span> <span class="nf">doWith</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">function</span><span class="o">&lt;</span><span class="kt">void</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">Type</span><span class="o">&gt;*</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">func</span><span class="p">)</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">        <span class="n">mut</span><span class="p">.</span><span class="n">lock</span><span class="p">();</span>
</span><span class="line">        <span class="n">func</span><span class="p">(</span><span class="o">&amp;</span><span class="n">vec</span><span class="p">);</span>
</span><span class="line">        <span class="n">mut</span><span class="p">.</span><span class="n">unlock</span><span class="p">();</span>
</span><span class="line">    <span class="p">};</span>
</span><span class="line"><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Key points:</p>

<ul>
  <li>Create function with a lambda parameter.Call this lambda within mutex context.</li>
  <li>The lambda’s parameter should be a reference,thus,it can be changed,or just change the copy.</li>
  <li>No need to create other functions used <code>mut</code>.If you do,Never use it in the parameter lambda func.</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[风之声]]></title>
    <link href="http://blog.iTian.mobi/blog/2014/09/08/sounds-of-wind/"/>
    <updated>2014-09-08T22:39:01+08:00</updated>
    <id>http://blog.iTian.mobi/blog/2014/09/08/sounds-of-wind</id>
    <content type="html"><![CDATA[<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class=""><span class="line">我在山之阳
</span><span class="line">树立着
</span><span class="line">灌木堆着
</span><span class="line">莫名的草没有花朵
</span><span class="line">我听到风的声音
</span><span class="line">我快些，它就说的大声些
</span><span class="line">我慢些，它就讲的小声些
</span><span class="line">我停下，它就一声不吭
</span><span class="line">
</span><span class="line">树沉默着
</span><span class="line">灌木沉默着
</span><span class="line">草沉默着
</span><span class="line">我在山之阳
</span><span class="line">我听到风的声音</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[State Machine in Game Development]]></title>
    <link href="http://blog.iTian.mobi/blog/2014/09/04/state-machine-in-game-development/"/>
    <updated>2014-09-04T21:02:56+08:00</updated>
    <id>http://blog.iTian.mobi/blog/2014/09/04/state-machine-in-game-development</id>
    <content type="html"><![CDATA[<p>In game server.Generally, use state machine to deal with game states changes and resoures.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="cpp"><span class="line"><span class="k">if</span><span class="p">(</span><span class="n">currentState</span> <span class="o">==</span> <span class="n">state1</span><span class="p">){</span>
</span><span class="line">    <span class="c1">//validate socket,player</span>
</span><span class="line">    <span class="c1">//deal state change</span>
</span><span class="line"><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="n">currentState</span> <span class="o">==</span> <span class="n">state2</span><span class="p">){</span>
</span><span class="line">    <span class="c1">//validate socket,player</span>
</span><span class="line">    <span class="c1">//deal state change</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="c1">//some other states</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Implementation by using if statement is not good.Will mess logic.
States dealings should be wrapped in functions.It’s more clear,and will reduce the state check executing.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
</pre></td><td class="code"><pre><code class="cpp"><span class="line"><span class="k">class</span> <span class="nc">Player</span><span class="p">;</span>
</span><span class="line"><span class="k">typedef</span> <span class="nf">void</span><span class="p">(</span><span class="o">*</span><span class="n">StateFunction</span><span class="p">)(</span><span class="n">Player</span> <span class="o">*</span><span class="n">player</span><span class="p">);</span>
</span><span class="line"><span class="k">enum</span> <span class="n">StateIndex</span><span class="p">{</span>
</span><span class="line">    <span class="n">StateIndexInit</span><span class="p">,</span>
</span><span class="line">    <span class="n">StateIndexRound1</span>
</span><span class="line"><span class="p">};</span>
</span><span class="line"><span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">StateFunction</span><span class="o">&gt;</span> <span class="n">states</span><span class="p">;</span>
</span><span class="line"><span class="kt">int</span> <span class="n">currentState</span> <span class="o">=</span> <span class="n">StateIndexInit</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="kt">void</span> <span class="nf">state1</span><span class="p">(</span><span class="n">Player</span> <span class="o">*</span><span class="n">player</span><span class="p">)</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="c1">//validate player</span>
</span><span class="line">    <span class="c1">//deal with state changes</span>
</span><span class="line">    <span class="c1">//if state1 is complete,then set currentState to other index</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="kt">void</span> <span class="nf">state2</span><span class="p">(</span><span class="n">Player</span> <span class="o">*</span><span class="n">player</span><span class="p">)</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="c1">//validate player</span>
</span><span class="line">    <span class="c1">//deal with state changes</span>
</span><span class="line">    <span class="c1">//if state2 is complete,then set currentState to other index</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="kt">void</span> <span class="nf">initGame</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="n">states</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">state1</span><span class="p">);</span>
</span><span class="line">    <span class="n">states</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">state2</span><span class="p">);</span>
</span><span class="line">    <span class="c1">// and some others</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="kt">void</span> <span class="nf">play</span><span class="p">(</span><span class="n">Player</span> <span class="o">*</span><span class="n">player</span><span class="p">)</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="p">(</span><span class="o">*</span><span class="p">(</span><span class="n">states</span><span class="p">[</span><span class="n">currentState</span><span class="p">]))(</span><span class="n">player</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hi!]]></title>
    <link href="http://blog.iTian.mobi/blog/2014/08/07/hi/"/>
    <updated>2014-08-07T22:33:41+08:00</updated>
    <id>http://blog.iTian.mobi/blog/2014/08/07/hi</id>
    <content type="html"><![CDATA[<h3 id="it-is-time-to-rock">It is time to ROCK.</h3>
<embed src="http://www.xiami.com/widget/0_1924628/singlePlayer.swf" type="application/x-shockwave-flash" width="257" height="33" wmode="transparent" />

<script type="math/tex; mode=display">
\lim_{0 \to +\infty} Interests = AmazingLife
</script>

]]></content>
  </entry>
  
</feed>
